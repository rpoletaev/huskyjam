// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/rpoletaev/huskyjam/http"
	"github.com/rpoletaev/huskyjam/http/bcrypt"
	"github.com/rpoletaev/huskyjam/internal/pg"
	"github.com/rpoletaev/huskyjam/internal/redis"
	"github.com/rpoletaev/huskyjam/pkg/auth/jwt"
	"github.com/rs/zerolog"
)

import (
	_ "github.com/joho/godotenv/autoload"
	_ "github.com/lib/pq"
)

// Injectors from wire.go:

func provideApp(logger zerolog.Logger, c *Config) *App {
	store := providePostgres(c)
	backend := provideRedis(c)
	tokens := provideJWT(c)
	config := provideAPIConfig(c)
	passManager := providePassHelper()
	api := &http.Api{
		Config:     config,
		Tokens:     tokens,
		Store:      store,
		HashHelper: passManager,
		KVStore:    backend,
		Logger:     logger,
	}
	app := &App{
		Store:   store,
		KVStore: backend,
		Tokens:  tokens,
		API:     api,
		Log:     logger,
	}
	return app
}

// wire.go:

func providePostgres(c *Config) *pg.Store {
	return &pg.Store{
		Config: c.PG,
	}
}

func provideJWT(c *Config) *jwt.Tokens {
	return jwt.New(c.JWT, nil, nil)
}

func provideRedis(c *Config) *redis.Backend {
	return &redis.Backend{Config: c.Redis}
}

func provideAPIConfig(c *Config) *http.Config {
	return c.HTTP
}

func providePassHelper() *bcrypt.PassManager {
	return &bcrypt.PassManager{}
}
