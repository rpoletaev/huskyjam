{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/admin/categories": {
            "put": {
                "description": "Updates category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates category",
                "operationId": "UpdateCategory",
                "parameters": [
                    {
                        "description": "Updated Category",
                        "name": "updateCategoryRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.updateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "500": {}
                }
            },
            "post": {
                "description": "Creates category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates category",
                "operationId": "CreateCategory",
                "parameters": [
                    {
                        "description": "New Category",
                        "name": "createCategoryRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.createCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {},
                    "400": {},
                    "500": {}
                }
            }
        },
        "/admin/categories/{id}": {
            "delete": {
                "description": "Delete category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete category",
                "operationId": "DeleteCategory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "404": {},
                    "500": {}
                }
            }
        },
        "/admin/goods": {
            "put": {
                "description": "Updates good",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates good",
                "operationId": "UpdateGood",
                "parameters": [
                    {
                        "description": "Updated good",
                        "name": "updateGoodRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.updateGoodRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "500": {}
                }
            },
            "post": {
                "description": "Creates good",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates good",
                "operationId": "CreateGood",
                "parameters": [
                    {
                        "description": "New good",
                        "name": "createGoodRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.createGoodRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {},
                    "400": {},
                    "500": {}
                }
            }
        },
        "/admin/goods/{id}": {
            "delete": {
                "description": "Delete good",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete good",
                "operationId": "DeleteGood",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Good ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "404": {},
                    "500": {}
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "update access token by produce refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update access token",
                "operationId": "refresh",
                "parameters": [
                    {
                        "description": "Refresh data",
                        "name": "refreshRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.refreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.signinResponse"
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "Signin user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Allows to signin",
                "operationId": "signin",
                "parameters": [
                    {
                        "description": "Sign in data",
                        "name": "signinRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.signinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.signinResponse"
                        }
                    },
                    "400": {},
                    "401": {},
                    "500": {}
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Signup user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Allows to signup",
                "operationId": "signup",
                "parameters": [
                    {
                        "description": "Add account",
                        "name": "signupRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.signupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {},
                    "400": {},
                    "500": {}
                }
            }
        },
        "/shop/categories": {
            "get": {
                "description": "Returns list of categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns list of categories",
                "operationId": "CategoriesList",
                "responses": {
                    "200": {},
                    "404": {},
                    "500": {}
                }
            }
        },
        "/shop/categories/{category}/goods": {
            "get": {
                "description": "Returns goods for a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns goods for a category",
                "operationId": "CategoryGoods",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "category",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "404": {},
                    "500": {}
                }
            }
        }
    },
    "definitions": {
        "http.Category": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "http.createCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "http.createGoodRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "http.refreshRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "http.signinRequest": {
            "type": "object",
            "required": [
                "email",
                "pass"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "some@email.zone"
                },
                "pass": {
                    "type": "string",
                    "example": "somepass"
                }
            }
        },
        "http.signinResponse": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string"
                },
                "refresh": {
                    "type": "string"
                }
            }
        },
        "http.signupRequest": {
            "type": "object",
            "required": [
                "email",
                "pass"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "some@email.zone"
                },
                "pass": {
                    "type": "string",
                    "example": "somepass"
                }
            }
        },
        "http.updateCategoryRequest": {
            "type": "object",
            "required": [
                "category"
            ],
            "properties": {
                "category": {
                    "$ref": "#/definitions/http.Category"
                }
            }
        },
        "http.updateGoodRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "X-Auth-Key": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}